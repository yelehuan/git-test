<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IUV.Core</name>
    </assembly>
    <members>
        <member name="T:IUV.Core.IuvConfig">
            <summary>
            通用的Xml配置文件类
            </summary>
        </member>
        <member name="P:IUV.Core.IuvConfig.Modules">
            <summary>
            配置模块
            </summary>
        </member>
        <member name="M:IUV.Core.IuvConfig.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:IUV.Core.IuvConfig.Open(System.String)">
            <summary>
            读取配置文件
            </summary>
            <param name="path">配置文件路径</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvConfig.Save(System.String)">
            <summary>
            保存配置文件
            </summary>
            <param name="path">配置文件路径</param>
        </member>
        <member name="P:IUV.Core.IuvConfig.Item(System.String)">
            <summary>
            索引器获取指定模块
            </summary>
            <param name="key">模块键</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvConfig.HasItem(System.String)">
            <summary>
            判断是否存在指定项
            </summary>
            <param name="path">配置项路径</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvConfig.GetItem(System.String)">
            <summary>
            根据路径获取参数值
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvConfig.SetItem(System.String,System.Object)">
            <summary>
            根据路径设置参数值
            </summary>
            <param name="path"></param>
            <param name="value"></param>
        </member>
        <member name="T:IUV.Core.IuvConfigItem">
            <summary>
            通用Xml配置文件项
            </summary>
        </member>
        <member name="P:IUV.Core.IuvConfigItem.Key">
            <summary>
            配置项键
            </summary>
        </member>
        <member name="P:IUV.Core.IuvConfigItem.Value">
            <summary>
            配置项值
            </summary>
        </member>
        <member name="P:IUV.Core.IuvConfigItem.Name">
            <summary>
            配置项名称
            </summary>
        </member>
        <member name="P:IUV.Core.IuvConfigItem.Items">
            <summary>
            配置子项
            </summary>
        </member>
        <member name="P:IUV.Core.IuvConfigItem.Attributes">
            <summary>
            配置项自定义属性
            </summary>
        </member>
        <member name="M:IUV.Core.IuvConfigItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:IUV.Core.IuvConfigItem.GetAttribute(System.String)">
            <summary>
            获取配置项属性值
            </summary>
            <param name="name">属性名称</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvConfigItem.SetAttribute(System.String,System.String)">
            <summary>
            设置配置项属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:IUV.Core.IuvConfigItem.Item(System.String)">
            <summary>
            索引器获取配置子项
            </summary>
            <param name="key">子项键值</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvConfigItem.HasItem(System.String)">
            <summary>
            判断是否存在指定项
            </summary>
            <param name="path">配置项路径</param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.ComponentConfigurationType">
            <summary>
            组件 配置 管理 类型
            </summary>
        </member>
        <member name="T:IUV.Core.ComponentFileConfigurationProvider">
            <summary>
            组件 配置 管理器
            </summary>
        </member>
        <member name="P:IUV.Core.ComponentFileConfigurationProvider.ConfigurationSection">
            <summary>
            ConfigurationSection
            </summary>
        </member>
        <member name="P:IUV.Core.ComponentFileConfigurationProvider.EncryptionKey">
            <summary>
            EncryptionKey 
            </summary>
        </member>
        <member name="M:IUV.Core.ComponentFileConfigurationProvider.#ctor(System.String)">
            <summary>
            ComponentFileConfigurationProvider
            </summary>
            <param name="baseDirectionary"></param>
        </member>
        <member name="M:IUV.Core.ComponentFileConfigurationProvider.Decrypt(System.String)">
            <summary>
            Decrypt
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IUV.Core.ComponentFileConfigurationProvider.Encrypt(System.String)">
            <summary>
            Encrypt
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IUV.Core.ComponentFileConfigurationProvider.GetConfig``1(System.String)">
            <summary>
            GetConfig
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.ComponentFileConfigurationProvider.Initialize">
            <summary>
            Initialize
            </summary>
        </member>
        <member name="M:IUV.Core.ComponentFileConfigurationProvider.IsConfigExist(System.String)">
            <summary>
            IsConfigExist
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.ComponentFileConfigurationProvider.SetConfig``1(System.String,``0)">
            <summary>
            SetConfig
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:IUV.Core.PluginConfigurationType">
            <summary>
            插件 配置 管理 类型
            </summary>
        </member>
        <member name="T:IUV.Core.PluginConfigurationProvider">
            <summary>
            PluginConfigurationProvider 
            </summary>
        </member>
        <member name="P:IUV.Core.PluginConfigurationProvider.ConfigurationSection">
            <summary>
            <see cref="P:IUV.Core.PluginConfigurationProvider.ConfigurationSection"/>
            </summary>
        </member>
        <member name="P:IUV.Core.PluginConfigurationProvider.EncryptionKey">
            <summary>
            <see cref="P:IUV.Core.PluginConfigurationProvider.EncryptionKey"/>
            </summary>
        </member>
        <member name="P:IUV.Core.PluginConfigurationProvider.ConfigPath">
            <summary>
            插件配置保存路径
            </summary>
        </member>
        <member name="M:IUV.Core.PluginConfigurationProvider.Decrypt(System.String)">
            <summary>
            Decrypt
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:IUV.Core.PluginConfigurationProvider.ParseConfigurationKey(System.String)">
            <summary>
            根据 Key 判断是否合法, 并返回插件名称, 配置项名称
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.PluginConfigurationProvider.GetConfig``1(System.String)">
            <summary>
            <see cref="M:IUV.Core.PluginConfigurationProvider.GetConfig``1(System.String)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.PluginConfigurationProvider.Initialize">
            <summary>
            <see cref="M:IUV.Core.PluginConfigurationProvider.Initialize"/>
            </summary>
        </member>
        <member name="M:IUV.Core.PluginConfigurationProvider.IsConfigExist(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.PluginConfigurationProvider.SetConfig``1(System.String,``0)">
            <summary>
            <see cref="M:IUV.Core.PluginConfigurationProvider.SetConfig``1(System.String,``0)"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:IUV.Core.UserConfigurationType">
            <summary>
            用户数据 配置 管理 类型
            </summary>
        </member>
        <member name="T:IUV.Core.CookieExtension">
            <summary>
            Cookie 扩展
            </summary>
        </member>
        <member name="M:IUV.Core.CookieExtension.GetAllCookies(System.Net.CookieContainer)">
            <summary>
            获取所有Cookie
            </summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.Ex">
            <summary>
            基础扩展
            </summary>
        </member>
        <member name="M:IUV.Core.Ex.GoList``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将源集合转化为目标类型的集合
            </summary>
            <typeparam name="S">源集合泛型类型</typeparam>
            <typeparam name="T">目标集合泛型类型</typeparam>
            <param name="source">源集合</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.GoObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将集合转成ObservableCollection
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            去除重复值
            </summary>
            <typeparam name="TSource">源集合类型</typeparam>
            <typeparam name="TKey">去重复字段类型</typeparam>
            <param name="source">源集合</param>
            <param name="keySelector">需去重复字段委托</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.DistinctBy``2(System.Linq.IQueryable{``0},System.Func{``0,``1})">
            <summary>
            去除重复值
            </summary>
            <typeparam name="TSource">源集合类型</typeparam>
            <typeparam name="TKey">去重复字段类型</typeparam>
            <param name="source">Linq查询语句</param>
            <param name="keySelector">需去重复字段委托</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.ColorFromUint(System.UInt32)">
            <summary>
            uint型转Color
            </summary>
            <param name="uintColor"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.ColorToUint(System.Windows.Media.Color)">
            <summary>
            颜色转换为Uint型
            </summary>
            <param name="color">颜色</param>
            <returns>Uint型</returns>
        </member>
        <member name="M:IUV.Core.Ex.ColorFromString(System.String)">
            <summary>
            argb颜色值转化为颜色，如#FFBCBDBE
            </summary>
            <param name="color">argb颜色值</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.ColorWithOpacity(System.Windows.Media.Color,System.Byte)">
            <summary>
            为Color生成一个带透明度的颜色值
            </summary>
            <param name="color">源颜色值</param>
            <param name="opacity">透明度0-255</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.ReplaceFirstIndex(System.String,System.String,System.String)">
            <summary>
            替换第一个出现的字符
            </summary>
            <param name="source">源文本</param>
            <param name="oldStr">被替换的字符串</param>
            <param name="newStr">新字符串</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.EnumToDesc(System.Enum)">
            <summary>
            枚举转描述信息
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.DescToEnum``1(System.Enum,System.String)">
            <summary>
            描述信息转枚举
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <param name="desc"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.DecimalToStr(System.Decimal,System.Int32)">
            <summary>
            decimal转文本，保留小数点位数
            </summary>
            <param name="data">数值</param>
            <param name="decimals">小数点位数，默认2</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Ex.GetTValue``1(System.Xml.XmlAttribute)">
            <summary>
            XmlAttribute快速获取指定类型的Value值
            </summary>
            <typeparam name="T">指定类型</typeparam>
            <param name="att">XmlAttribute</param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.MenuContext">
            <summary>
            MenuContext
            </summary>
        </member>
        <member name="M:IUV.Core.MenuContext.GetMenuSetting(System.String,System.String)">
            <summary>
            GetMenuSetting
            </summary>
            <param name="menuId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.MenuContext.GetMenuSettingNode(System.String,System.String)">
            <summary>
            GetMenuSettingNode
            </summary>
            <param name="menuId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.Request">
            <summary>
            Http Request
            </summary>
        </member>
        <member name="P:IUV.Core.Request.Domain">
            <summary>
            Domain
            </summary>
        </member>
        <member name="P:IUV.Core.Request.Resource">
            <summary>
            Resource
            </summary>
        </member>
        <member name="P:IUV.Core.Request.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:IUV.Core.Request.Method">
            <summary>
            Method
            </summary>
        </member>
        <member name="P:IUV.Core.Request.Headers">
            <summary>
            Headers
            </summary>
        </member>
        <member name="P:IUV.Core.Request.Parameters">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="P:IUV.Core.Request.IgnoreEmptyParameter">
            <summary>
            IgnoreEmptyParameter
            </summary>
        </member>
        <member name="P:IUV.Core.Request.CookieContainer">
            <summary>
            CookieContainer
            </summary>
        </member>
        <member name="P:IUV.Core.Request.AllowAutoRedirect">
            <summary>
            AllowAutoRedirect
            </summary>
        </member>
        <member name="M:IUV.Core.Request.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:IUV.Core.Request.AddHeaders(System.String,System.String)">
            <summary>
            AddHeaders
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Request.AddHeaders(System.Collections.Specialized.NameValueCollection)">
            <summary>
            AddHeaders
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Request.AddParameters(System.String,System.String)">
            <summary>
            AddParameters
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Request.AddParameters(System.Collections.Specialized.NameValueCollection)">
            <summary>
            AddParameters
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Request.GetResponse">
            <summary>
            GetResponse
            </summary>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Request.BuildUri">
            <summary>
            BuildUri
            </summary>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.Response">
            <summary>
            Response
            </summary>
        </member>
        <member name="P:IUV.Core.Response.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:IUV.Core.Response.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="P:IUV.Core.Response.ResponseUri">
            <summary>
            ResponseUri
            </summary>
        </member>
        <member name="P:IUV.Core.Response.CookieContainer">
            <summary>
            CookieContainer
            </summary>
        </member>
        <member name="M:IUV.Core.Response.#ctor(System.Net.HttpStatusCode,System.String,System.Net.CookieContainer,System.String)">
            <summary>
            ctor
            </summary>
            <param name="status"></param>
            <param name="content"></param>
            <param name="cookieContainer"></param>
            <param name="responseUri"></param>
        </member>
        <member name="T:IUV.Core.Method">
            <summary>
            Http Method
            </summary>
        </member>
        <member name="F:IUV.Core.Method.GET">
            <summary>
            GET
            </summary>
        </member>
        <member name="F:IUV.Core.Method.POST">
            <summary>
            POST
            </summary>
        </member>
        <member name="F:IUV.Core.Method.PUT">
            <summary>
            PUT
            </summary>
        </member>
        <member name="F:IUV.Core.Method.DELETE">
            <summary>
            DELETE
            </summary>
        </member>
        <member name="F:IUV.Core.Method.HEAD">
            <summary>
            HEAD
            </summary>
        </member>
        <member name="F:IUV.Core.Method.OPTIONS">
            <summary>
            OPTIONS
            </summary>
        </member>
        <member name="F:IUV.Core.Method.PATCH">
            <summary>
            PATCH
            </summary>
        </member>
        <member name="F:IUV.Core.Method.MERGE">
            <summary>
            MERGE
            </summary>
        </member>
        <member name="T:IUV.Core.IuvCommon">
            <summary>
            Iuv用到的公共方法
            </summary>
        </member>
        <member name="M:IUV.Core.IuvCommon.ConvertToHsDate(System.DateTime)">
            <summary>
            将普通的时间转换为8位的恒生时间
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvCommon.HsDateConvertoDate(System.String)">
            <summary>
            将8位的恒生格式的数字字符串转换为DateTime对象的日期部分
            </summary>
            <param name="date">8位恒生格式的字符串，如20170608</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvCommon.HsDateConvertoTime(System.String)">
            <summary>
            将6位的恒生格式的数字字符串转换为DateTime对象的时间部分
            </summary>
            <param name="time">8位恒生格式的字符串，如144003</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvCommon.HsDateConvertoDateTime(System.String)">
            <summary>
            将14位完整的恒生格式的数字字符串转换为DateTime对象
            </summary>
            <param name="dateTime">14位恒生格式的字符串，如20170608144003</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvCommon.BuildDateTime(System.Int32,System.Int32)">
            <summary>
            根据日期和时间生成DateTime
            </summary>
            <remarks>
            create time: 2017-6-22 15:17:25
            </remarks>
            <param name="date">日期，格式：20170622</param>
            <param name="time">时间，格式：150808</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvCommon.ConvertMarketCodeToMic(System.String)">
            <summary>
            转换市场代码到Mic码
            </summary>
            <param name="marketCode">市场代码</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.IuvCommon.GetOSVersion">
            <summary>
            获取操作系统版本号
            </summary>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.Common.IIuvMessageBox">
            <summary>
            统一IUV消息弹出窗接口
            业务部门只需继承当前接口，将各种不同风格的弹出窗体注册进来即可
            </summary>
        </member>
        <member name="T:IUV.Core.Common.WorkQueue">
            <summary>
            WorkQueue
            </summary>
        </member>
        <member name="M:IUV.Core.Common.WorkQueue.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:IUV.Core.Common.WorkQueue.AddTask(System.Action)">
            <summary>
            AddTask
            </summary>
            <param name="act"></param>
        </member>
        <member name="M:IUV.Core.Common.WorkQueue.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:IUV.Core.Python.ISupportPyDict">
            <summary>
            支持转换为Python dict 对象接口
            </summary>
        </member>
        <member name="T:IUV.Core.Python.ISupportPyDictExtension">
            <summary>
            ISupportPyDictExtension
            </summary>
        </member>
        <member name="M:IUV.Core.Python.ISupportPyDictExtension.ToDict(IUV.Core.Python.ISupportPyDict)">
            <summary>
            转换为Python Dict
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.Python.PyPropertyAttribute">
            <summary>
            PyProperty Attribute
            </summary>
        </member>
        <member name="M:IUV.Core.Python.PyPropertyAttribute.#ctor(System.String)">
            <summary>
            ctor
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:IUV.Core.Python.PyPropertyAttribute.PropertyName">
            <summary>
            PropertyName
            </summary>
        </member>
        <member name="T:IUV.Core.Python.PyDateTimeAttribute">
            <summary>
            PyDateTime Attribute 
            </summary>
        </member>
        <member name="M:IUV.Core.Python.PyDateTimeAttribute.#ctor(System.String)">
            <summary>
            ctor
            </summary>
            <param name="format"></param>
        </member>
        <member name="P:IUV.Core.Python.PyDateTimeAttribute.Format">
            <summary>
            DateTime Format
            </summary>
        </member>
        <member name="T:IUV.Core.Python.PyTypeAttribute">
            <summary>
            PyTypeAttribute 
            </summary>
        </member>
        <member name="M:IUV.Core.Python.PyTypeAttribute.#ctor(System.Type)">
            <summary>
            ctor
            </summary>
            <param name="propertyType"></param>
        </member>
        <member name="P:IUV.Core.Python.PyTypeAttribute.PropertyType">
            <summary>
            PropertyType 
            </summary>
        </member>
        <member name="T:IUV.Core.Python.PyArrayAttribute">
            <summary>
            PyArray Attribute 
            </summary>
        </member>
        <member name="T:IUV.Core.Python.PyDataFrameAttribute">
            <summary>
            指示这是一个 DataFrame
            </summary>
        </member>
        <member name="T:IUV.Core.Python.PyIndexAttribute">
            <summary>
            PyIndexAttribute
            </summary>
        </member>
        <member name="T:IUV.Core.Python.PythonExtension">
            <summary>
            Python 扩展
            </summary>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.ToInt(Python.Runtime.PyObject)">
            <summary>
            to int32
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.ToDouble(Python.Runtime.PyObject)">
            <summary>
            ToDouble
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.ToDateTime(Python.Runtime.PyObject,System.String)">
            <summary>
            ToDateTime
            </summary>
            <param name="obj"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.ToDict(Python.Runtime.PyObject)">
            <summary>
            ToDict
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.ToTuple(Python.Runtime.PyObject)">
            <summary>
            ToDict
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.ToClr(Python.Runtime.PyObject,System.Type)">
            <summary>
            ToClr
            </summary>
            <param name="obj"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.ToArray(Python.Runtime.PyList,System.Type)">
            <summary>
            ToArray
            </summary>
            <param name="list"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.ToArray(IUV.Core.Python.PyDataFrame,System.Type)">
            <summary>
            ToArray
            </summary>
            <param name="df"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.ToClr(IUV.Core.Python.PyDataFrame,System.Type)">
            <summary>
            ToArray
            </summary>
            <param name="df"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.Deserialize(Python.Runtime.PyObject,System.Type)">
            <summary>
            Deserialize
            </summary>
            <param name="obj"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.Python.PythonExtension.Deserialize(Python.Runtime.PyDict,System.Type)">
            <summary>
            Deserize
            </summary>
            <param name="dict"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.Python.PyDataFrame">
            <summary>
            PyDataFrame 
            </summary>
        </member>
        <member name="M:IUV.Core.Python.PyDataFrame.#ctor(Python.Runtime.PyObject)">
            <summary>
            ctor
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:IUV.Core.Win32">
            <summary>
            win32接口操作类
            </summary>
        </member>
        <member name="M:IUV.Core.Win32.GetCursorPos(IUV.Core.POINT@)">
            <summary>
            获取当前的鼠标位置坐标
            </summary>
            <param name="point">输出坐标</param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.POINT">
            <summary>
            用于win32的坐标结构体
            </summary>
        </member>
        <member name="F:IUV.Core.POINT.X">
            <summary>
            X坐标
            </summary>
        </member>
        <member name="F:IUV.Core.POINT.Y">
            <summary>
            Y坐标
            </summary>
        </member>
        <member name="T:IUV.Core.AppSet">
            <summary>
            全局配置
            </summary>
        </member>
        <member name="M:IUV.Core.AppSet.GetConfig(System.String)">
            <summary>
            从 app.config 中读取某个配置项
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.AsnycTaskManager`1">
            <summary>
            异步线程管理器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:IUV.Core.BehaviorProperties">
            <summary>
            BehaviorProperties
            </summary>
        </member>
        <member name="F:IUV.Core.BehaviorProperties.BehaviorInfoProperty">
            <summary>
            行为分析附件属性
            </summary>
        </member>
        <member name="M:IUV.Core.BehaviorProperties.GetBehaviorInfo(System.Windows.DependencyObject)">
            <summary>
            GetBehaviorInfo
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.BehaviorProperties.SetBehaviorInfo(System.Windows.DependencyObject,IUV.Common.Models.BehaviorInfo)">
            <summary>
            SetBehaviorInfo
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="T:IUV.Core.DelayTask">
            <summary>
            DelayTask
            </summary>
        </member>
        <member name="M:IUV.Core.DelayTask.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)">
            <summary>
            ctor
            </summary>
            <param name="scheduler"></param>
            <param name="excuteDelay"></param>
        </member>
        <member name="M:IUV.Core.DelayTask.Excute(System.Action,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Excute
            </summary>
            <param name="act"></param>
            <param name="delay"></param>
            <param name="token"></param>
        </member>
        <member name="M:IUV.Core.DelayTask.QueueExcute(System.Action)">
            <summary>
            QueueExcute
            </summary>
            <param name="act"></param>
        </member>
        <member name="P:IUV.Core.DelayTask.Main">
            <summary>
            task from main thread
            </summary>
        </member>
        <member name="T:IUV.Core.EventLimiter`1">
            <summary>
            UI事件调度器
            </summary>
            <typeparam name="T">传入参数的类型</typeparam>
        </member>
        <member name="F:IUV.Core.EventLimiter`1.dispatcher">
            <summary>
            UI调度源
            </summary>
        </member>
        <member name="F:IUV.Core.EventLimiter`1.dispatcherPriority">
            <summary>
            调用优先级
            </summary>
        </member>
        <member name="F:IUV.Core.EventLimiter`1.executeAction">
            <summary>
            执行委托
            </summary>
        </member>
        <member name="F:IUV.Core.EventLimiter`1.timer">
            <summary>
            可跨UI线程计时器
            </summary>
        </member>
        <member name="F:IUV.Core.EventLimiter`1.nextEventParameter">
            <summary>
            下一个要调用的参数
            </summary>
        </member>
        <member name="F:IUV.Core.EventLimiter`1.isLimiting">
            <summary>
            是否出于活动状态
            </summary>
        </member>
        <member name="F:IUV.Core.EventLimiter`1.invocationRequired">
            <summary>
            当停止活动状态时是否继续执行下一个操作
            </summary>
        </member>
        <member name="M:IUV.Core.EventLimiter`1.Trigger(`0)">
            <summary>
            触发委托调用
            </summary>
            <param name="arg">传递参数</param>
        </member>
        <member name="M:IUV.Core.EventLimiter`1.TimerTickHandler(System.Object,System.EventArgs)">
            <summary>
            计时器调用
            </summary>
        </member>
        <member name="T:IUV.Core.FeatureOper">
            <summary>
            WPF相关特色操作类
            </summary>
        </member>
        <member name="M:IUV.Core.FeatureOper.GetImageSource(System.Windows.FrameworkElement,System.Nullable{System.Windows.Rect})">
            <summary>
            根据控件获取图片
            </summary>
            <param name="element">控件</param>
            <param name="imgRect">截取的范围</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.FeatureOper.GetCanvasPoint(System.Windows.FrameworkElement)">
            <summary>
            获得在Canvas的相对坐标
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.IuvFocusHelper">
            <summary>
            附加属性
            是否获取焦点
            add by yyl 2017-05-24
            </summary>
        </member>
        <member name="T:IUV.Core.PinYin">
            <summary>
            拼音帮助类
            </summary>
        </member>
        <member name="F:IUV.Core.PinYin._charDictionary">
            <summary>
            汉字拼音首字母字典
            </summary>
        </member>
        <member name="M:IUV.Core.PinYin.#cctor">
            <summary>
            初始化汉字拼音
            </summary>
        </member>
        <member name="M:IUV.Core.PinYin.GetFirstPinyin(System.String)">
            <summary>
            汉字转化为拼音首字母组合
            如果有多音字，则返回多个
            </summary>
            <param name="chinessStr">汉字</param>
            <returns>首字母</returns>
        </member>
        <member name="M:IUV.Core.PinYin.InitCharDictionary">
            <summary>
            初始化汉字拼音首字母表
            </summary>
        </member>
        <member name="T:IUV.Core.SerializableHelper">
            <summary>
            对象序列化和反序列化
            </summary>
        </member>
        <member name="M:IUV.Core.SerializableHelper.Serialize``1(``0,System.String)">
            <summary>
            对象序列化
            </summary>
            <param name="o">序列化的目标对象</param>
            <param name="xmlPath">xml地址（包含全路径及文件名称）</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.SerializableHelper.Deserialize``1(``0@,System.String)">
            <summary>
            反序列化
            </summary>
            <param name="o">返回的序列化对象</param>
            <param name="xmlPath">xml地址（包含全路径及文件名称）</param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.SharedResourceDictionary">
            <summary>
            SharedResourceDictionary
            </summary>
        </member>
        <member name="M:IUV.Core.SharedResourceDictionary.#cctor">
            <summary>
            static ctor
            </summary>
        </member>
        <member name="P:IUV.Core.SharedResourceDictionary.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="T:IUV.Core.VisualTreeOper">
            <summary>
            视觉树操作类
            </summary>
        </member>
        <member name="M:IUV.Core.VisualTreeOper.FindFirstVisualChild``1(System.Windows.DependencyObject,System.String)">
            <summary>
            从一个可视化对象中找到符合名称的第一个子对象
            </summary>
            <typeparam name="T">子对象的类型</typeparam>
            <param name="obj">父对象</param>
            <param name="childName">子对象名称</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.VisualTreeOper.GetChildObjects``1(System.Windows.DependencyObject,System.String)">
            <summary>
            从一个可视化对象中找到其子对象集合
            </summary>
            <typeparam name="T">子对象类型</typeparam>
            <param name="obj">父对象</param>
            <param name="name">子对象名称</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.VisualTreeOper.FindVisualParent``1(System.Windows.DependencyObject,System.String)">
            <summary>
            找到该可视化对象的父对象
            </summary>
            <typeparam name="T">父对象类型</typeparam>
            <param name="obj">当前可视化对象</param>
            <param name="name">名称</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.XmlHelper.GetNodeValue(System.String,System.String)">
            <summary>
            获取节点值
            </summary>
            <param name="filePath"></param>
            <param name="nodeName"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.XmlHelper.SetNodeValue(System.String,System.String,System.String)">
            <summary>
            设置节点值
            </summary>
            <param name="filePath"></param>
            <param name="nodeName"></param>
            <param name="value"></param>
        </member>
        <member name="P:IUV.Core.ComponentBase.ParentComponent">
            <summary>
            父级组件
            </summary>
        </member>
        <member name="P:IUV.Core.ComponentBase.IsActived">
            <summary>
            是否切入
            </summary>
        </member>
        <member name="F:IUV.Core.ComponentBase.IsActivedProperty">
            <summary>
            是否切入
            </summary>
        </member>
        <member name="E:IUV.Core.ComponentBase.ComponentOpened">
            <summary>
            组件打开结束事件
            </summary>
        </member>
        <member name="M:IUV.Core.ComponentBase.OnComponentOpened(System.Windows.RoutedEventArgs)">
            <summary>
            引发组件打开结束事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:IUV.Core.ComponentBase.ComponentActived">
            <summary>
            组件激活事件
            </summary>
        </member>
        <member name="M:IUV.Core.ComponentBase.OnComponentActived(System.Windows.RoutedEventArgs)">
            <summary>
            引发组件激活事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:IUV.Core.ComponentBase.ComponentDeactived">
            <summary>
            组件切出事件（从激活切出到未激活）
            </summary>
        </member>
        <member name="M:IUV.Core.ComponentBase.OnComponentDeactived(System.Windows.RoutedEventArgs)">
            <summary>
            引发组件切出事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:IUV.Core.ComponentBase.ComponentInitializedEvent">
            <summary>
            组件初始化完成事件
            </summary>
        </member>
        <member name="E:IUV.Core.ComponentBase.ComponentInitialized">
            <summary>
            组件初始化完成事件
            </summary>
        </member>
        <member name="M:IUV.Core.ComponentBase.OnComponentInitialized(System.Windows.RoutedEventArgs)">
            <summary>
            组件初始化完成事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:IUV.Core.ComponentBase.ComponentContentInitializedEvent">
            <summary>
            组件Content初始化完成事件
            </summary>
        </member>
        <member name="E:IUV.Core.ComponentBase.ComponentContentInitialized">
            <summary>
            组件Content初始化完成事件
            </summary>
        </member>
        <member name="M:IUV.Core.ComponentBase.OnComponentContentInitialized(System.Windows.RoutedEventArgs)">
            <summary>
            组件Content初始化完成事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:IUV.Core.BehaviorAnalysisManager">
            <summary>
            行为分析管理器
            </summary>
        </member>
        <member name="M:IUV.Core.BehaviorAnalysisManager.Initialize(IUV.Common.Models.IBehaviorAnalysis)">
            <summary>
            行为分析管理器
            </summary>
        </member>
        <member name="M:IUV.Core.BehaviorAnalysisManager.ReocrdBehavior(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            行为分析记录
            </summary>
            <param name="eventName"></param>
            <param name="behaviors"></param>
        </member>
        <member name="M:IUV.Core.BehaviorAnalysisManager.ReocrdBehaviorInfosByDependencyObject(System.Windows.DependencyObject,IUV.Common.Models.BehaviorOperationEnum,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            组件行为分析记录
            </summary>
            <param name="dependencyObject"></param>
            <param name="behaviorOperation"></param>
            <param name="behaviors"></param>
        </member>
        <member name="M:IUV.Core.BehaviorAnalysisManager.ReocrdBehaviorInfosByBehaviorInfo(IUV.Common.Models.BehaviorInfo,IUV.Common.Models.BehaviorOperationEnum,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            组件行为分析记录
            </summary>
            <param name="behaviorInfo"></param>
            <param name="behaviorOperation"></param>
            <param name="behaviors"></param>
        </member>
        <member name="M:IUV.Core.BehaviorAnalysisManager.ReocrdBehaviorInfosByDependencyObjectOnMoudleName(System.Windows.DependencyObject,IUV.Common.Models.BehaviorOperationEnum,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            组件行为分析记录(添加当前板块名称TabName)
            </summary>
            <param name="dependencyObject"></param>
            <param name="behaviorOperation"></param>
            <param name="behaviors"></param>
        </member>
        <member name="T:IUV.Core.IUVConfigManager">
            <summary>
            IUV 配置管理器
            </summary>
        </member>
        <member name="P:IUV.Core.IUVConfigManager.SupportHSMarket">
            <summary>
            是否支持沪深市场
            </summary>        
        </member>
        <member name="P:IUV.Core.IUVConfigManager.SupportHKMarket">
            <summary>
            是否支持港股市场
            </summary>
        </member>
        <member name="P:IUV.Core.IUVConfigManager.SupportUSMarket">
            <summary>
            是否支持美股市场
            </summary>
        </member>
        <member name="P:IUV.Core.IUVConfigManager.SupportFutures">
            <summary>
            是否支持期货
            </summary>
        </member>
        <member name="P:IUV.Core.IUVConfigManager.SupportFund">
            <summary>
            是否支持基金
            </summary>
        </member>
        <member name="P:IUV.Core.IUVConfigManager.SupportBonds">
            <summary>
            是否支持债券
            </summary>
        </member>
        <member name="T:IUV.Core.IuvContext">
            <summary>
            IUV上下文
            </summary>
        </member>
        <member name="P:IUV.Core.IuvContext.QuoteAdapter">
            <summary>
            行情适配器接口（单例）
            </summary>
        </member>
        <member name="M:IUV.Core.IuvContext.InitInformationAdapter(IUV.Adapter.Information.InfoAdapterConfig)">
            <summary>
            初始化资讯适配器
            </summary>
            <param name="config"></param>
            <param name="webAddr">链接地址</param>
        </member>
        <member name="P:IUV.Core.IuvContext.InformationAdapter">
            <summary>
            资讯适配器接口（单例）
            </summary>
        </member>
        <member name="E:IUV.Core.IuvContext.PreviewKeyDown">
            <summary>
            全局按键事件
            </summary>
        </member>
        <member name="M:IUV.Core.IuvContext.PreviewKeyDownHandler(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            接收全局按键事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:IUV.Core.IuvContext.Config">
            <summary>
            配置管理器
            </summary>
        </member>
        <member name="P:IUV.Core.IuvContext.ConfigurationManager">
            <summary>
            配置管理器 
            </summary>
        </member>
        <member name="P:IUV.Core.IuvContext.BehaviorAnalysisManager">
            <summary>
            行为分析管理器
            </summary>
        </member>
        <member name="P:IUV.Core.IuvContext.MainWidow">
            <summary>
            主窗体(用于消息弹出窗弹出时，窗体会滞后)
            </summary>
        </member>
        <member name="M:IUV.Core.IuvContext.SetMainWindow(System.Windows.Window)">
            <summary>
            设置主窗体
            </summary>
            <param name="window"></param>
        </member>
        <member name="P:IUV.Core.IuvContext.MessageBox">
            <summary>
            统一消息弹出窗风格
            </summary>
        </member>
        <member name="M:IUV.Core.IuvContext.SetMessageBox(IUV.Core.Common.IIuvMessageBox)">
            <summary>
            设置消息弹出窗
            </summary>
            <param name="window"></param>
        </member>
        <member name="P:IUV.Core.IuvContext.PythonHome">
            <summary>
            Python Home
            </summary>
        </member>
        <member name="M:IUV.Core.IuvContext.SetPythonHome(System.String)">
            <summary>
            设置Python环境路径
            </summary>
            <param name="pythonHome"></param>
        </member>
        <member name="M:IUV.Core.IuvContext.PreloadAssembly(System.String)">
            <summary>
            PreloadAssembly
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:IUV.Core.IuvContext.OpenApiConfigInfo">
            <summary>
            OpenApi网络请求配置
            </summary>
        </member>
        <member name="M:IUV.Core.IuvContext.SetConfig(System.String,System.String)">
            <summary>
            设置 配置项
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:IUV.Core.IuvContext.GetConfig(System.String)">
            <summary>
            获取 配置项
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:IUV.Core.IuvContext.InitWebBrowser">
            <summary>
            初始化浏览器
            </summary>
        </member>
        <member name="M:IUV.Core.IuvContext.ShutdownWebBrowser">
            <summary>
            关闭浏览器
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.ImageButton.ImageKeyProperty">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.ImageButton.ImageKey">
            <summary>
            数据源
            </summary>
        </member>
        <member name="T:IUV.Core.LayoutManager.SaveTemplate">
            <summary>
            SaveTemplate.xaml 的交互逻辑
            </summary>
            <summary>
            SaveTemplate
            </summary>
        </member>
        <member name="M:IUV.Core.LayoutManager.SaveTemplate.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:IUV.Core.LayoutManager.ToolBox">
            <summary>
            ToolBox.xaml 的交互逻辑
            </summary>
            <summary>
            ToolBox
            </summary>
        </member>
        <member name="M:IUV.Core.LayoutManager.ToolBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:IUV.Core.LayoutManager.DefaultContextService.Register``1(``0)">
            <summary>
            注册对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="symbol"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.DefaultContextService.GetObject``1(System.Type)">
            <summary>
            获取对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.LayoutManager.Win32Helper.LimitMouse(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            用来限制鼠标移动范围
            </summary>
        </member>
        <member name="M:IUV.Core.LayoutManager.Win32Helper.LimitMouse">
            <summary>
            用来限制鼠标移动范围
            </summary>
        </member>
        <member name="M:IUV.Core.LayoutManager.WPFHelper.Serialize``1(``0,System.String)">
            <summary>
            对象序列化
            </summary>
            <param name="o">序列化的目标对象</param>
            <param name="xmlPath">xml地址（包含全路径及文件名称）</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.LayoutManager.WPFHelper.Deserialize``1(``0@,System.String)">
            <summary>
            反序列化
            </summary>
            <param name="o">返回的序列化对象</param>
            <param name="xmlPath">xml地址（包含全路径及文件名称）</param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.LayoutManager.WPFHelper.CreateElement``1(System.String,System.String,System.String)">
            <summary>
            创建组件面板
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dllName"></param>
            <param name="typeFullName"></param>
            <returns></returns>
        </member>
        <member name="M:IUV.Core.LayoutManager.ILayoutElement.Publish``1(``0)">
            <summary>
            发布消息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.ILayoutElement.Receive``1(``0)">
            <summary>
            接收消息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message"></param>
        </member>
        <member name="T:IUV.Core.LayoutManager.LayoutElement">
            <summary>
            面板元素
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.TitleProperty">
            <summary>
            窗口标题。
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.Title">
            <summary>
            获取或设置窗口标题
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.IsLockedProperty">
            <summary>
            是否窗口标题栏
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.IsLocked">
            <summary>
            获取或设置是否窗口标题栏
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.TitleBarHeightProperty">
            <summary>
            标题栏高度
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.TitleBarHeight">
            <summary>
            获取或设置标题栏高度
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.TitleBarBackgroundProperty">
            <summary>
            标题栏背景色
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.TitleBarBackground">
            <summary>
            获取或设置标题栏背景色
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.IsSelectedProperty">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.IsSelected">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.MinSizeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.MinSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.MaxSizeProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.MaxSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.IsPopupOpenProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.IsPopupOpen">
            <summary>
            
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.GroupItemSourceProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.GroupItemSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutElement.GroupIDProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutElement.GroupID">
            <summary>
            
            </summary>
        </member>
        <member name="M:IUV.Core.LayoutManager.LayoutElement.Receive``1(``0)">
            <summary>
            消息接收
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message"></param>
        </member>
        <member name="E:IUV.Core.LayoutManager.LayoutElement.PropertyChanged">
            <summary>
            PropertyChanged
            </summary>
        </member>
        <member name="M:IUV.Core.LayoutManager.LayoutElement.OnPropertyChanged(System.String)">
            <summary>
            OnPropertyChanged
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.LayoutElement.SetValue``1(System.Linq.Expressions.Expression{System.Func{``0}},``0)">
            <summary>
            SetValue
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property"></param>
            <param name="value"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.LayoutElement.GetValue``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            GetValue
            </summary>
            <typeparam name="T"></typeparam>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="T:IUV.Core.LayoutManager.LayoutPanel">
            <summary>
            容器面板
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.SnapServiceProperty">
            <summary>
            咬合
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.SnapService">
            <summary>
            咬合
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.MoveServiceProperty">
            <summary>
            移动管理
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.MoveService">
            <summary>
            移动管理
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.ResizeServiceProperty">
            <summary>
            修改大小
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.ResizeService">
            <summary>
            修改大小
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.DataServiceProperty">
            <summary>
            数据管理
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.DataService">
            <summary>
            数据管理
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.LayoutServiceProperty">
            <summary>
            布局管理
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.LayoutService">
            <summary>
            布局管理
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.ToolBoxProperty">
            <summary>
            工具箱
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.ToolBox">
            <summary>
            工具箱
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.EventManagerServiceProperty">
            <summary>
            事件管理
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.EventManagerService">
            <summary>
            事件管理
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.ExceptionServiceProperty">
            <summary>
            异常管理
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.ExceptionService">
            <summary>
            异常管理
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.DropServiceProperty">
            <summary>
            拖动服务
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.DropService">
            <summary>
            拖动服务
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.IsLockedProperty">
            <summary>
            是否窗口标题栏
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.IsLocked">
            <summary>
            获取或设置是否窗口标题栏
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.SelectedElementProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:IUV.Core.LayoutManager.LayoutPanel.SelectedElement">
            <summary>
            当前选中节点
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.LayoutPanel.ContextProperty">
            <summary>
            
            </summary>
        </member>
        <member name="T:IUV.Core.LayoutManager.ElementItem">
            <summary>
            工具箱
            </summary>
        </member>
        <member name="T:IUV.Core.LayoutManager.ElementItemGroup">
            <summary>
            工具箱所属组合
            </summary>
        </member>
        <member name="F:IUV.Core.LayoutManager.DataService._panel">
            <summary>
            设置工具箱文件路径
            </summary>
            <param name="path">工具箱文件全路径</param>
        </member>
        <member name="M:IUV.Core.LayoutManager.DataService.SetLayoutDir(System.String)">
            <summary>
            设置模板文件夹路径
            </summary>
            <param name="dir"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.EventManagerService.Publish``1(IUV.Core.LayoutManager.ILayoutElement,``0)">
            <summary>
            发布消息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="message"></param>
        </member>
        <member name="P:IUV.Core.LayoutManager.MouseServiceBase.MouseHitType">
            <summary>
            鼠标状态
            </summary>
        </member>
        <member name="M:IUV.Core.LayoutManager.MouseServiceBase.OnMouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标按下
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.MouseServiceBase.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            鼠标移动
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.MouseServiceBase.OnMouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            鼠标谈起
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.MouseServiceBase.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            大小改变
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.MoveService.SetMouseCursor(IUV.Core.LayoutManager.ILayoutElement,IUV.Core.LayoutManager.HitType)">
            <summary>
            设置鼠标形状
            </summary>
            <param name="element"></param>
            <param name="mouseHitType"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.MoveService.BringToFront(System.Windows.UIElement)">
            <summary>
            置前
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.MoveService.SendToBack(System.Windows.UIElement)">
            <summary>
            置后
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:IUV.Core.LayoutManager.SnapService.SnapPanel(IUV.Core.LayoutManager.LayoutPanel,IUV.Core.LayoutManager.ILayoutElement)">
            <summary>
            吸附容器
            </summary>
            <param name="elmnent"></param>
        </member>
        <member name="T:IUV.Core.MutilOrBoolToVisibilityConverter">
            <summary>
            或运算  主要其中一个满足即可
            </summary>
        </member>
        <member name="T:IUV.Core.ReverseMutilOrBoolToVisibilityConverter">
            <summary>
            或运算  其中一个条件满足即隐藏
            </summary>
        </member>
        <member name="T:IUV.Core.SystemCommomStyle">
            <summary>
            通用主题配置
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle._quoteboardFontSizeOffset">
            <summary>
            报价牌字号偏移量
            </summary>
        </member>
        <member name="M:IUV.Core.SystemCommomStyle.ChangeFontSize(System.Double)">
            <summary>
            修改字体大小
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:IUV.Core.SystemCommomStyle.InitFontSize">
            <summary>
            字体大小初始化
            </summary>
        </member>
        <member name="M:IUV.Core.SystemCommomStyle.InitBrushes">
            <summary>
            初始化画刷
            </summary> 
        </member>
        <member name="F:IUV.Core.SystemCommomStyle.isUpGreenAndDownRed">
            <summary>
            是否是红跌绿涨
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.IsUpGreenAndDownRed">
            <summary>
            是否是红跌绿涨
            </summary>
        </member>
        <member name="E:IUV.Core.SystemCommomStyle.StaticPropertyChanged">
            <summary>
            为 System.ComponentModel.INotifyPropertyChanged.PropertyChanged 事件提供数据
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle.stockUpBrush">
            <summary>
            图表绘制上涨色
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.StockUpBrush">
            <summary>
            图表绘制上涨色
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle.stockDownBrush">
            <summary>
            图表绘制下跌色
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.StockDownBrush">
            <summary>
            图表绘制下跌色
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle.stockNormalBrush">
            <summary>
            图表绘制正常色
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.StockNormalBrush">
            <summary>
            图表绘制正常色
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle.textUpBrush">
            <summary>
            文本显示上涨色
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.TextUpBrush">
            <summary>
            文本显示上涨色
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle.textDownBrush">
            <summary>
            文本显示下跌色
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.TextDownBrush">
            <summary>
            文本显示下跌色
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle.textNormalBrush">
            <summary>
            文本显示正常色
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.TextNormalBrush">
            <summary>
            文本显示正常色
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle._quoteBoardHeadFontSize">
            <summary>
            报价牌标题字体大小
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.QuoteBoardHeadFontSize">
            <summary>
            报价牌标题字体大小
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle._quoteBoardFontSize">
            <summary>
            报价牌字体大小
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.QuoteBoardFontSize">
            <summary>
            报价牌字体大小
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle._textFontSize">
            <summary>
            文本大小
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.TextFontSize">
            <summary>
            文本大小
            </summary>
        </member>
        <member name="F:IUV.Core.SystemCommomStyle._headFontSize">
            <summary>
            标题字体大小
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.HeadFontSize">
            <summary>
            标题字体大小
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.FontSizeTen">
            <summary>
            10号字体
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.FontSizeEleven">
            <summary>
            11号字体
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.FontSizeFourteen">
            <summary>
            14号字体
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.FontSizeFifteen">
            <summary>
            15号字体
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.FontSizeSixteen">
            <summary>
            16号字体
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.FontSizeSeventeen">
            <summary>
            17号字体
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.FontSizeEighteen">
            <summary>
            18号字体
            </summary>
        </member>
        <member name="P:IUV.Core.SystemCommomStyle.QuoteBoardRowHeight">
            <summary>
            报价牌行高
            </summary>
        </member>
        <member name="T:IUV.Core.Properties.Resources">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:IUV.Core.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:IUV.Core.Properties.Resources.Culture">
            <summary>
              覆盖当前线程的 CurrentUICulture 属性
              使用此强类型的资源类的资源查找。
            </summary>
        </member>
    </members>
</doc>
